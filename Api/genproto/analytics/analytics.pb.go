// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.12.4
// source: analytics.proto

package analytics

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddMedicalRecordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId      string   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RecordType  string   `protobuf:"bytes,3,opt,name=record_type,json=recordType,proto3" json:"record_type,omitempty"`
	RecordDate  string   `protobuf:"bytes,4,opt,name=record_date,json=recordDate,proto3" json:"record_date,omitempty"` // timestamp as string
	Description string   `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	DoctorId    string   `protobuf:"bytes,6,opt,name=doctor_id,json=doctorId,proto3" json:"doctor_id,omitempty"`
	Attachments []string `protobuf:"bytes,7,rep,name=attachments,proto3" json:"attachments,omitempty"`
}

func (x *AddMedicalRecordReq) Reset() {
	*x = AddMedicalRecordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMedicalRecordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMedicalRecordReq) ProtoMessage() {}

func (x *AddMedicalRecordReq) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMedicalRecordReq.ProtoReflect.Descriptor instead.
func (*AddMedicalRecordReq) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{0}
}

func (x *AddMedicalRecordReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AddMedicalRecordReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddMedicalRecordReq) GetRecordType() string {
	if x != nil {
		return x.RecordType
	}
	return ""
}

func (x *AddMedicalRecordReq) GetRecordDate() string {
	if x != nil {
		return x.RecordDate
	}
	return ""
}

func (x *AddMedicalRecordReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AddMedicalRecordReq) GetDoctorId() string {
	if x != nil {
		return x.DoctorId
	}
	return ""
}

func (x *AddMedicalRecordReq) GetAttachments() []string {
	if x != nil {
		return x.Attachments
	}
	return nil
}

type AddMedicalRecordRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId      string   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RecordType  string   `protobuf:"bytes,3,opt,name=record_type,json=recordType,proto3" json:"record_type,omitempty"`
	RecordDate  string   `protobuf:"bytes,4,opt,name=record_date,json=recordDate,proto3" json:"record_date,omitempty"` // timestamp as string
	Description string   `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	DoctorId    string   `protobuf:"bytes,6,opt,name=doctor_id,json=doctorId,proto3" json:"doctor_id,omitempty"`
	Attachments []string `protobuf:"bytes,7,rep,name=attachments,proto3" json:"attachments,omitempty"`
	CreatedAt   string   `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"` // timestamp as string
	UpdatedAt   string   `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *AddMedicalRecordRes) Reset() {
	*x = AddMedicalRecordRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMedicalRecordRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMedicalRecordRes) ProtoMessage() {}

func (x *AddMedicalRecordRes) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMedicalRecordRes.ProtoReflect.Descriptor instead.
func (*AddMedicalRecordRes) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{1}
}

func (x *AddMedicalRecordRes) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AddMedicalRecordRes) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddMedicalRecordRes) GetRecordType() string {
	if x != nil {
		return x.RecordType
	}
	return ""
}

func (x *AddMedicalRecordRes) GetRecordDate() string {
	if x != nil {
		return x.RecordDate
	}
	return ""
}

func (x *AddMedicalRecordRes) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AddMedicalRecordRes) GetDoctorId() string {
	if x != nil {
		return x.DoctorId
	}
	return ""
}

func (x *AddMedicalRecordRes) GetAttachments() []string {
	if x != nil {
		return x.Attachments
	}
	return nil
}

func (x *AddMedicalRecordRes) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *AddMedicalRecordRes) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type GetMedicalRecordsByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecordId string `protobuf:"bytes,2,opt,name=record_id,json=recordId,proto3" json:"record_id,omitempty"`
}

func (x *GetMedicalRecordsByIdReq) Reset() {
	*x = GetMedicalRecordsByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMedicalRecordsByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMedicalRecordsByIdReq) ProtoMessage() {}

func (x *GetMedicalRecordsByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMedicalRecordsByIdReq.ProtoReflect.Descriptor instead.
func (*GetMedicalRecordsByIdReq) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{2}
}

func (x *GetMedicalRecordsByIdReq) GetRecordId() string {
	if x != nil {
		return x.RecordId
	}
	return ""
}

type GetMedicalRecordsByIdRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *AddMedicalRecordRes `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *GetMedicalRecordsByIdRes) Reset() {
	*x = GetMedicalRecordsByIdRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMedicalRecordsByIdRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMedicalRecordsByIdRes) ProtoMessage() {}

func (x *GetMedicalRecordsByIdRes) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMedicalRecordsByIdRes.ProtoReflect.Descriptor instead.
func (*GetMedicalRecordsByIdRes) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{3}
}

func (x *GetMedicalRecordsByIdRes) GetInfo() *AddMedicalRecordRes {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetMedicalRecordsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetMedicalRecordsReq) Reset() {
	*x = GetMedicalRecordsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMedicalRecordsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMedicalRecordsReq) ProtoMessage() {}

func (x *GetMedicalRecordsReq) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMedicalRecordsReq.ProtoReflect.Descriptor instead.
func (*GetMedicalRecordsReq) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{4}
}

type GetMedicalRecordsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Records []*AddMedicalRecordRes `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
}

func (x *GetMedicalRecordsRes) Reset() {
	*x = GetMedicalRecordsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMedicalRecordsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMedicalRecordsRes) ProtoMessage() {}

func (x *GetMedicalRecordsRes) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMedicalRecordsRes.ProtoReflect.Descriptor instead.
func (*GetMedicalRecordsRes) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{5}
}

func (x *GetMedicalRecordsRes) GetRecords() []*AddMedicalRecordRes {
	if x != nil {
		return x.Records
	}
	return nil
}

type UpdateMedicalRecordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId      string   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RecordType  string   `protobuf:"bytes,3,opt,name=record_type,json=recordType,proto3" json:"record_type,omitempty"`
	RecordDate  string   `protobuf:"bytes,4,opt,name=record_date,json=recordDate,proto3" json:"record_date,omitempty"` // timestamp as string
	Description string   `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	DoctorId    string   `protobuf:"bytes,6,opt,name=doctor_id,json=doctorId,proto3" json:"doctor_id,omitempty"`
	Attachments []string `protobuf:"bytes,7,rep,name=attachments,proto3" json:"attachments,omitempty"`
}

func (x *UpdateMedicalRecordReq) Reset() {
	*x = UpdateMedicalRecordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMedicalRecordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMedicalRecordReq) ProtoMessage() {}

func (x *UpdateMedicalRecordReq) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMedicalRecordReq.ProtoReflect.Descriptor instead.
func (*UpdateMedicalRecordReq) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateMedicalRecordReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateMedicalRecordReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateMedicalRecordReq) GetRecordType() string {
	if x != nil {
		return x.RecordType
	}
	return ""
}

func (x *UpdateMedicalRecordReq) GetRecordDate() string {
	if x != nil {
		return x.RecordDate
	}
	return ""
}

func (x *UpdateMedicalRecordReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateMedicalRecordReq) GetDoctorId() string {
	if x != nil {
		return x.DoctorId
	}
	return ""
}

func (x *UpdateMedicalRecordReq) GetAttachments() []string {
	if x != nil {
		return x.Attachments
	}
	return nil
}

type DeleteMedicalRecordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteMedicalRecordReq) Reset() {
	*x = DeleteMedicalRecordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMedicalRecordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMedicalRecordReq) ProtoMessage() {}

func (x *DeleteMedicalRecordReq) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMedicalRecordReq.ProtoReflect.Descriptor instead.
func (*DeleteMedicalRecordReq) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteMedicalRecordReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListMedicalRecordsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListMedicalRecordsReq) Reset() {
	*x = ListMedicalRecordsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMedicalRecordsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMedicalRecordsReq) ProtoMessage() {}

func (x *ListMedicalRecordsReq) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMedicalRecordsReq.ProtoReflect.Descriptor instead.
func (*ListMedicalRecordsReq) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{8}
}

type ListMedicalRecordsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Records []*AddMedicalRecordRes `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
}

func (x *ListMedicalRecordsRes) Reset() {
	*x = ListMedicalRecordsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMedicalRecordsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMedicalRecordsRes) ProtoMessage() {}

func (x *ListMedicalRecordsRes) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMedicalRecordsRes.ProtoReflect.Descriptor instead.
func (*ListMedicalRecordsRes) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{9}
}

func (x *ListMedicalRecordsRes) GetRecords() []*AddMedicalRecordRes {
	if x != nil {
		return x.Records
	}
	return nil
}

// Lifestyle Data
type AddLifestyleDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId       string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DataType     string `protobuf:"bytes,3,opt,name=data_type,json=dataType,proto3" json:"data_type,omitempty"`
	DataValue    string `protobuf:"bytes,4,opt,name=data_value,json=dataValue,proto3" json:"data_value,omitempty"`
	RecordedDate string `protobuf:"bytes,5,opt,name=recorded_date,json=recordedDate,proto3" json:"recorded_date,omitempty"` // timestamp as string
}

func (x *AddLifestyleDataReq) Reset() {
	*x = AddLifestyleDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddLifestyleDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddLifestyleDataReq) ProtoMessage() {}

func (x *AddLifestyleDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddLifestyleDataReq.ProtoReflect.Descriptor instead.
func (*AddLifestyleDataReq) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{10}
}

func (x *AddLifestyleDataReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AddLifestyleDataReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddLifestyleDataReq) GetDataType() string {
	if x != nil {
		return x.DataType
	}
	return ""
}

func (x *AddLifestyleDataReq) GetDataValue() string {
	if x != nil {
		return x.DataValue
	}
	return ""
}

func (x *AddLifestyleDataReq) GetRecordedDate() string {
	if x != nil {
		return x.RecordedDate
	}
	return ""
}

type AddLifestyleDataRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId       string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DataType     string `protobuf:"bytes,3,opt,name=data_type,json=dataType,proto3" json:"data_type,omitempty"`
	DataValue    string `protobuf:"bytes,4,opt,name=data_value,json=dataValue,proto3" json:"data_value,omitempty"`
	RecordedDate string `protobuf:"bytes,5,opt,name=recorded_date,json=recordedDate,proto3" json:"recorded_date,omitempty"` // timestamp as string
	CreatedAt    string `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`          // timestamp as string
	UpdatedAt    string `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *AddLifestyleDataRes) Reset() {
	*x = AddLifestyleDataRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddLifestyleDataRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddLifestyleDataRes) ProtoMessage() {}

func (x *AddLifestyleDataRes) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddLifestyleDataRes.ProtoReflect.Descriptor instead.
func (*AddLifestyleDataRes) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{11}
}

func (x *AddLifestyleDataRes) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AddLifestyleDataRes) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddLifestyleDataRes) GetDataType() string {
	if x != nil {
		return x.DataType
	}
	return ""
}

func (x *AddLifestyleDataRes) GetDataValue() string {
	if x != nil {
		return x.DataValue
	}
	return ""
}

func (x *AddLifestyleDataRes) GetRecordedDate() string {
	if x != nil {
		return x.RecordedDate
	}
	return ""
}

func (x *AddLifestyleDataRes) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *AddLifestyleDataRes) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type GetLifestyleDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetLifestyleDataReq) Reset() {
	*x = GetLifestyleDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLifestyleDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLifestyleDataReq) ProtoMessage() {}

func (x *GetLifestyleDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLifestyleDataReq.ProtoReflect.Descriptor instead.
func (*GetLifestyleDataReq) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{12}
}

type GetLifestyleDataRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*AddLifestyleDataRes `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetLifestyleDataRes) Reset() {
	*x = GetLifestyleDataRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLifestyleDataRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLifestyleDataRes) ProtoMessage() {}

func (x *GetLifestyleDataRes) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLifestyleDataRes.ProtoReflect.Descriptor instead.
func (*GetLifestyleDataRes) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{13}
}

func (x *GetLifestyleDataRes) GetData() []*AddLifestyleDataRes {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetLifestyleDataByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DataId string `protobuf:"bytes,2,opt,name=data_id,json=dataId,proto3" json:"data_id,omitempty"`
}

func (x *GetLifestyleDataByIdReq) Reset() {
	*x = GetLifestyleDataByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLifestyleDataByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLifestyleDataByIdReq) ProtoMessage() {}

func (x *GetLifestyleDataByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLifestyleDataByIdReq.ProtoReflect.Descriptor instead.
func (*GetLifestyleDataByIdReq) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{14}
}

func (x *GetLifestyleDataByIdReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetLifestyleDataByIdReq) GetDataId() string {
	if x != nil {
		return x.DataId
	}
	return ""
}

type GetLifestyleDataByIdRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *AddLifestyleDataRes `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *GetLifestyleDataByIdRes) Reset() {
	*x = GetLifestyleDataByIdRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLifestyleDataByIdRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLifestyleDataByIdRes) ProtoMessage() {}

func (x *GetLifestyleDataByIdRes) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLifestyleDataByIdRes.ProtoReflect.Descriptor instead.
func (*GetLifestyleDataByIdRes) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{15}
}

func (x *GetLifestyleDataByIdRes) GetInfo() *AddLifestyleDataRes {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateLifestyleDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId       string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DataType     string `protobuf:"bytes,3,opt,name=data_type,json=dataType,proto3" json:"data_type,omitempty"`
	DataValue    string `protobuf:"bytes,4,opt,name=data_value,json=dataValue,proto3" json:"data_value,omitempty"`
	RecordedDate string `protobuf:"bytes,5,opt,name=recorded_date,json=recordedDate,proto3" json:"recorded_date,omitempty"` // timestamp as string
}

func (x *UpdateLifestyleDataReq) Reset() {
	*x = UpdateLifestyleDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLifestyleDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLifestyleDataReq) ProtoMessage() {}

func (x *UpdateLifestyleDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLifestyleDataReq.ProtoReflect.Descriptor instead.
func (*UpdateLifestyleDataReq) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateLifestyleDataReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateLifestyleDataReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateLifestyleDataReq) GetDataType() string {
	if x != nil {
		return x.DataType
	}
	return ""
}

func (x *UpdateLifestyleDataReq) GetDataValue() string {
	if x != nil {
		return x.DataValue
	}
	return ""
}

func (x *UpdateLifestyleDataReq) GetRecordedDate() string {
	if x != nil {
		return x.RecordedDate
	}
	return ""
}

type DeleteLifestyleDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteLifestyleDataReq) Reset() {
	*x = DeleteLifestyleDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLifestyleDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLifestyleDataReq) ProtoMessage() {}

func (x *DeleteLifestyleDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLifestyleDataReq.ProtoReflect.Descriptor instead.
func (*DeleteLifestyleDataReq) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteLifestyleDataReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Wearable Data
type AddWearableDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId            string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DeviceType        string `protobuf:"bytes,3,opt,name=device_type,json=deviceType,proto3" json:"device_type,omitempty"`
	DataType          string `protobuf:"bytes,4,opt,name=data_type,json=dataType,proto3" json:"data_type,omitempty"`
	DataValue         string `protobuf:"bytes,5,opt,name=data_value,json=dataValue,proto3" json:"data_value,omitempty"`
	RecordedTimestamp string `protobuf:"bytes,6,opt,name=recorded_timestamp,json=recordedTimestamp,proto3" json:"recorded_timestamp,omitempty"` // timestamp as string
}

func (x *AddWearableDataReq) Reset() {
	*x = AddWearableDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddWearableDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddWearableDataReq) ProtoMessage() {}

func (x *AddWearableDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddWearableDataReq.ProtoReflect.Descriptor instead.
func (*AddWearableDataReq) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{18}
}

func (x *AddWearableDataReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AddWearableDataReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddWearableDataReq) GetDeviceType() string {
	if x != nil {
		return x.DeviceType
	}
	return ""
}

func (x *AddWearableDataReq) GetDataType() string {
	if x != nil {
		return x.DataType
	}
	return ""
}

func (x *AddWearableDataReq) GetDataValue() string {
	if x != nil {
		return x.DataValue
	}
	return ""
}

func (x *AddWearableDataReq) GetRecordedTimestamp() string {
	if x != nil {
		return x.RecordedTimestamp
	}
	return ""
}

type AddWearableDataRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId            string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DeviceType        string `protobuf:"bytes,3,opt,name=device_type,json=deviceType,proto3" json:"device_type,omitempty"`
	DataType          string `protobuf:"bytes,4,opt,name=data_type,json=dataType,proto3" json:"data_type,omitempty"`
	DataValue         string `protobuf:"bytes,5,opt,name=data_value,json=dataValue,proto3" json:"data_value,omitempty"`
	RecordedTimestamp string `protobuf:"bytes,6,opt,name=recorded_timestamp,json=recordedTimestamp,proto3" json:"recorded_timestamp,omitempty"` // timestamp as string
	CreatedAt         string `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                         // timestamp as string
}

func (x *AddWearableDataRes) Reset() {
	*x = AddWearableDataRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddWearableDataRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddWearableDataRes) ProtoMessage() {}

func (x *AddWearableDataRes) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddWearableDataRes.ProtoReflect.Descriptor instead.
func (*AddWearableDataRes) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{19}
}

func (x *AddWearableDataRes) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AddWearableDataRes) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddWearableDataRes) GetDeviceType() string {
	if x != nil {
		return x.DeviceType
	}
	return ""
}

func (x *AddWearableDataRes) GetDataType() string {
	if x != nil {
		return x.DataType
	}
	return ""
}

func (x *AddWearableDataRes) GetDataValue() string {
	if x != nil {
		return x.DataValue
	}
	return ""
}

func (x *AddWearableDataRes) GetRecordedTimestamp() string {
	if x != nil {
		return x.RecordedTimestamp
	}
	return ""
}

func (x *AddWearableDataRes) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type GetWearableDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetWearableDataReq) Reset() {
	*x = GetWearableDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWearableDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWearableDataReq) ProtoMessage() {}

func (x *GetWearableDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWearableDataReq.ProtoReflect.Descriptor instead.
func (*GetWearableDataReq) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{20}
}

type GetWearableDataRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*AddWearableDataRes `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetWearableDataRes) Reset() {
	*x = GetWearableDataRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWearableDataRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWearableDataRes) ProtoMessage() {}

func (x *GetWearableDataRes) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWearableDataRes.ProtoReflect.Descriptor instead.
func (*GetWearableDataRes) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{21}
}

func (x *GetWearableDataRes) GetData() []*AddWearableDataRes {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetWearableDataByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataId string `protobuf:"bytes,1,opt,name=data_id,json=dataId,proto3" json:"data_id,omitempty"`
}

func (x *GetWearableDataByIdReq) Reset() {
	*x = GetWearableDataByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWearableDataByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWearableDataByIdReq) ProtoMessage() {}

func (x *GetWearableDataByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWearableDataByIdReq.ProtoReflect.Descriptor instead.
func (*GetWearableDataByIdReq) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{22}
}

func (x *GetWearableDataByIdReq) GetDataId() string {
	if x != nil {
		return x.DataId
	}
	return ""
}

type GetWearableDataByIdRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *AddWearableDataRes `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *GetWearableDataByIdRes) Reset() {
	*x = GetWearableDataByIdRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWearableDataByIdRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWearableDataByIdRes) ProtoMessage() {}

func (x *GetWearableDataByIdRes) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWearableDataByIdRes.ProtoReflect.Descriptor instead.
func (*GetWearableDataByIdRes) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{23}
}

func (x *GetWearableDataByIdRes) GetInfo() *AddWearableDataRes {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateWearableDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId            string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DeviceType        string `protobuf:"bytes,3,opt,name=device_type,json=deviceType,proto3" json:"device_type,omitempty"`
	DataType          string `protobuf:"bytes,4,opt,name=data_type,json=dataType,proto3" json:"data_type,omitempty"`
	DataValue         string `protobuf:"bytes,5,opt,name=data_value,json=dataValue,proto3" json:"data_value,omitempty"`
	RecordedTimestamp string `protobuf:"bytes,6,opt,name=recorded_timestamp,json=recordedTimestamp,proto3" json:"recorded_timestamp,omitempty"` // timestamp as string
}

func (x *UpdateWearableDataReq) Reset() {
	*x = UpdateWearableDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateWearableDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWearableDataReq) ProtoMessage() {}

func (x *UpdateWearableDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWearableDataReq.ProtoReflect.Descriptor instead.
func (*UpdateWearableDataReq) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{24}
}

func (x *UpdateWearableDataReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateWearableDataReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateWearableDataReq) GetDeviceType() string {
	if x != nil {
		return x.DeviceType
	}
	return ""
}

func (x *UpdateWearableDataReq) GetDataType() string {
	if x != nil {
		return x.DataType
	}
	return ""
}

func (x *UpdateWearableDataReq) GetDataValue() string {
	if x != nil {
		return x.DataValue
	}
	return ""
}

func (x *UpdateWearableDataReq) GetRecordedTimestamp() string {
	if x != nil {
		return x.RecordedTimestamp
	}
	return ""
}

type DeleteWearableDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteWearableDataReq) Reset() {
	*x = DeleteWearableDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteWearableDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWearableDataReq) ProtoMessage() {}

func (x *DeleteWearableDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWearableDataReq.ProtoReflect.Descriptor instead.
func (*DeleteWearableDataReq) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{25}
}

func (x *DeleteWearableDataReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Health Recommendations
type GenerateHealthRecommendationsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId             string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RecommendationType string `protobuf:"bytes,2,opt,name=recommendation_type,json=recommendationType,proto3" json:"recommendation_type,omitempty"`
	Description        string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *GenerateHealthRecommendationsReq) Reset() {
	*x = GenerateHealthRecommendationsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateHealthRecommendationsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateHealthRecommendationsReq) ProtoMessage() {}

func (x *GenerateHealthRecommendationsReq) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateHealthRecommendationsReq.ProtoReflect.Descriptor instead.
func (*GenerateHealthRecommendationsReq) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{26}
}

func (x *GenerateHealthRecommendationsReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GenerateHealthRecommendationsReq) GetRecommendationType() string {
	if x != nil {
		return x.RecommendationType
	}
	return ""
}

func (x *GenerateHealthRecommendationsReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type GenerateHealthRecommendationsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId             string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RecommendationType string `protobuf:"bytes,3,opt,name=recommendation_type,json=recommendationType,proto3" json:"recommendation_type,omitempty"`
	Description        string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt          string `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt          string `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *GenerateHealthRecommendationsRes) Reset() {
	*x = GenerateHealthRecommendationsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateHealthRecommendationsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateHealthRecommendationsRes) ProtoMessage() {}

func (x *GenerateHealthRecommendationsRes) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateHealthRecommendationsRes.ProtoReflect.Descriptor instead.
func (*GenerateHealthRecommendationsRes) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{27}
}

func (x *GenerateHealthRecommendationsRes) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GenerateHealthRecommendationsRes) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GenerateHealthRecommendationsRes) GetRecommendationType() string {
	if x != nil {
		return x.RecommendationType
	}
	return ""
}

func (x *GenerateHealthRecommendationsRes) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GenerateHealthRecommendationsRes) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *GenerateHealthRecommendationsRes) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type GetHealthRecommendationsByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId           string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RecommendationId string `protobuf:"bytes,2,opt,name=recommendation_id,json=recommendationId,proto3" json:"recommendation_id,omitempty"`
}

func (x *GetHealthRecommendationsByIdReq) Reset() {
	*x = GetHealthRecommendationsByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHealthRecommendationsByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHealthRecommendationsByIdReq) ProtoMessage() {}

func (x *GetHealthRecommendationsByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHealthRecommendationsByIdReq.ProtoReflect.Descriptor instead.
func (*GetHealthRecommendationsByIdReq) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{28}
}

func (x *GetHealthRecommendationsByIdReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetHealthRecommendationsByIdReq) GetRecommendationId() string {
	if x != nil {
		return x.RecommendationId
	}
	return ""
}

type GetHealthRecommendationsByIdRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *GenerateHealthRecommendationsRes `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *GetHealthRecommendationsByIdRes) Reset() {
	*x = GetHealthRecommendationsByIdRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHealthRecommendationsByIdRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHealthRecommendationsByIdRes) ProtoMessage() {}

func (x *GetHealthRecommendationsByIdRes) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHealthRecommendationsByIdRes.ProtoReflect.Descriptor instead.
func (*GetHealthRecommendationsByIdRes) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{29}
}

func (x *GetHealthRecommendationsByIdRes) GetInfo() *GenerateHealthRecommendationsRes {
	if x != nil {
		return x.Info
	}
	return nil
}

// Health Monitoring
type GetRealtimeHealthMonitoringReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetRealtimeHealthMonitoringReq) Reset() {
	*x = GetRealtimeHealthMonitoringReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRealtimeHealthMonitoringReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRealtimeHealthMonitoringReq) ProtoMessage() {}

func (x *GetRealtimeHealthMonitoringReq) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRealtimeHealthMonitoringReq.ProtoReflect.Descriptor instead.
func (*GetRealtimeHealthMonitoringReq) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{30}
}

func (x *GetRealtimeHealthMonitoringReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetRealtimeHealthMonitoringRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId         string            `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	MonitoringData map[string]string `protobuf:"bytes,2,rep,name=monitoring_data,json=monitoringData,proto3" json:"monitoring_data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // key-value pairs for monitoring data
}

func (x *GetRealtimeHealthMonitoringRes) Reset() {
	*x = GetRealtimeHealthMonitoringRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRealtimeHealthMonitoringRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRealtimeHealthMonitoringRes) ProtoMessage() {}

func (x *GetRealtimeHealthMonitoringRes) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRealtimeHealthMonitoringRes.ProtoReflect.Descriptor instead.
func (*GetRealtimeHealthMonitoringRes) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{31}
}

func (x *GetRealtimeHealthMonitoringRes) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetRealtimeHealthMonitoringRes) GetMonitoringData() map[string]string {
	if x != nil {
		return x.MonitoringData
	}
	return nil
}

type GetDailyHealthSummaryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetDailyHealthSummaryReq) Reset() {
	*x = GetDailyHealthSummaryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDailyHealthSummaryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDailyHealthSummaryReq) ProtoMessage() {}

func (x *GetDailyHealthSummaryReq) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDailyHealthSummaryReq.ProtoReflect.Descriptor instead.
func (*GetDailyHealthSummaryReq) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{32}
}

func (x *GetDailyHealthSummaryReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetDailyHealthSummaryRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Summary string `protobuf:"bytes,2,opt,name=summary,proto3" json:"summary,omitempty"`
}

func (x *GetDailyHealthSummaryRes) Reset() {
	*x = GetDailyHealthSummaryRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDailyHealthSummaryRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDailyHealthSummaryRes) ProtoMessage() {}

func (x *GetDailyHealthSummaryRes) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDailyHealthSummaryRes.ProtoReflect.Descriptor instead.
func (*GetDailyHealthSummaryRes) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{33}
}

func (x *GetDailyHealthSummaryRes) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetDailyHealthSummaryRes) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

type GetWeeklyHealthSummaryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetWeeklyHealthSummaryReq) Reset() {
	*x = GetWeeklyHealthSummaryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWeeklyHealthSummaryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWeeklyHealthSummaryReq) ProtoMessage() {}

func (x *GetWeeklyHealthSummaryReq) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWeeklyHealthSummaryReq.ProtoReflect.Descriptor instead.
func (*GetWeeklyHealthSummaryReq) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{34}
}

func (x *GetWeeklyHealthSummaryReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetWeeklyHealthSummaryRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Summary string `protobuf:"bytes,2,opt,name=summary,proto3" json:"summary,omitempty"`
}

func (x *GetWeeklyHealthSummaryRes) Reset() {
	*x = GetWeeklyHealthSummaryRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWeeklyHealthSummaryRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWeeklyHealthSummaryRes) ProtoMessage() {}

func (x *GetWeeklyHealthSummaryRes) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWeeklyHealthSummaryRes.ProtoReflect.Descriptor instead.
func (*GetWeeklyHealthSummaryRes) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{35}
}

func (x *GetWeeklyHealthSummaryRes) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetWeeklyHealthSummaryRes) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text   string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	IsDone bool   `protobuf:"varint,2,opt,name=isDone,proto3" json:"isDone,omitempty"`
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analytics_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_analytics_proto_rawDescGZIP(), []int{36}
}

func (x *Empty) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Empty) GetIsDone() bool {
	if x != nil {
		return x.IsDone
	}
	return false
}

var File_analytics_proto protoreflect.FileDescriptor

var file_analytics_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x22, 0xe1, 0x01, 0x0a,
	0x13, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x22, 0x9f, 0x02, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72,
	0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x22, 0x37, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1b,
	0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x22, 0x4e, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63,
	0x73, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x73, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x16, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73,
	0x52, 0x65, 0x71, 0x22, 0x50, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61,
	0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x07, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61,
	0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x64, 0x69,
	0x63, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x52, 0x07, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x73, 0x22, 0xe4, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a,
	0x09, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x28, 0x0a, 0x16,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65,
	0x64, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x22,
	0x51, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x6e, 0x61, 0x6c,
	0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x52, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x73, 0x22, 0x9f, 0x01, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x4c, 0x69, 0x66, 0x65, 0x73, 0x74,
	0x79, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x65, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x22, 0xdd, 0x01, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x4c, 0x69, 0x66, 0x65,
	0x73, 0x74, 0x79, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x65, 0x64, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x66, 0x65, 0x73,
	0x74, 0x79, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x22, 0x49, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x4c, 0x69, 0x66, 0x65, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x41, 0x64, 0x64,
	0x4c, 0x69, 0x66, 0x65, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4b, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x66,
	0x65, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74,
	0x61, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x66, 0x65, 0x73, 0x74,
	0x79, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x12, 0x32,
	0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61,
	0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x4c, 0x69, 0x66, 0x65,
	0x73, 0x74, 0x79, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x52, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x22, 0xa2, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x66,
	0x65, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x65, 0x64, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x22, 0x28, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4c, 0x69, 0x66, 0x65, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0xc9, 0x01, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x57, 0x65, 0x61, 0x72, 0x61, 0x62, 0x6c,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2d,
	0x0a, 0x12, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xe8, 0x01,
	0x0a, 0x12, 0x41, 0x64, 0x64, 0x57, 0x65, 0x61, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x64, 0x61, 0x74, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x65, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x57,
	0x65, 0x61, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x22, 0x47,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x57, 0x65, 0x61, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x41,
	0x64, 0x64, 0x57, 0x65, 0x61, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x31, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x57, 0x65,
	0x61, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x22, 0x4b, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x57, 0x65, 0x61, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x41,
	0x64, 0x64, 0x57, 0x65, 0x61, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0xcc, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x57, 0x65, 0x61, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61,
	0x74, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x65, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x27, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x57, 0x65, 0x61, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x8e, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x48, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2f, 0x0a,
	0x13, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0xdc, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x48, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2f,
	0x0a, 0x13, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22,
	0x67, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x72,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x62, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x48,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x12, 0x3f, 0x0a, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x6e, 0x61, 0x6c,
	0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x48, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x39, 0x0a, 0x1e,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x48, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xe4, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x4d, 0x6f, 0x6e,
	0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x66, 0x0a, 0x0f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e,
	0x67, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x61,
	0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x61, 0x6c,
	0x74, 0x69, 0x6d, 0x65, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x2e, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69,
	0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x6d, 0x6f, 0x6e,
	0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x41, 0x0a, 0x13, 0x4d,
	0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x33,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x48,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x22, 0x34, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x48,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4e, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x57,
	0x65, 0x65, 0x6b, 0x6c, 0x79, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x22, 0x33, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x44, 0x6f, 0x6e, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x44, 0x6f, 0x6e, 0x65, 0x32, 0xf5, 0x0e,
	0x0a, 0x10, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x52, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x1e, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69,
	0x63, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69,
	0x63, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x12, 0x54, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x64,
	0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x1f, 0x2e, 0x61, 0x6e, 0x61,
	0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61,
	0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x61, 0x6e,
	0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x63,
	0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x12, 0x61, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x73, 0x42, 0x79, 0x49, 0x64, 0x12, 0x23, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x73, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x61, 0x6e, 0x61,
	0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61,
	0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x12,
	0x4a, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x21, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69,
	0x63, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x61, 0x6e, 0x61, 0x6c,
	0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4a, 0x0a, 0x13, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x12, 0x21, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63,
	0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x58, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x4d,
	0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x20, 0x2e,
	0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65,
	0x64, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x20, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65,
	0x73, 0x12, 0x52, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x4c, 0x69, 0x66, 0x65, 0x73, 0x74, 0x79, 0x6c,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63,
	0x73, 0x2e, 0x41, 0x64, 0x64, 0x4c, 0x69, 0x66, 0x65, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63,
	0x73, 0x2e, 0x41, 0x64, 0x64, 0x4c, 0x69, 0x66, 0x65, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x73, 0x12, 0x52, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x66, 0x65,
	0x73, 0x74, 0x79, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x2e, 0x61, 0x6e, 0x61, 0x6c,
	0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x66, 0x65, 0x73, 0x74, 0x79,
	0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x61, 0x6e, 0x61, 0x6c,
	0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x66, 0x65, 0x73, 0x74, 0x79,
	0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x12, 0x5e, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x4c, 0x69, 0x66, 0x65, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x49,
	0x64, 0x12, 0x22, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x4c, 0x69, 0x66, 0x65, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x66, 0x65, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x12, 0x4a, 0x0a, 0x13, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4c, 0x69, 0x66, 0x65, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x21, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4c, 0x69, 0x66, 0x65, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4a, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c,
	0x69, 0x66, 0x65, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x2e, 0x61,
	0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c,
	0x69, 0x66, 0x65, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x1a,
	0x10, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x4f, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x57, 0x65, 0x61, 0x72, 0x61, 0x62, 0x6c, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73,
	0x2e, 0x41, 0x64, 0x64, 0x57, 0x65, 0x61, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e,
	0x41, 0x64, 0x64, 0x57, 0x65, 0x61, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x12, 0x4f, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x57, 0x65, 0x61, 0x72, 0x61, 0x62, 0x6c,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x65, 0x61, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x57, 0x65, 0x61, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x73, 0x12, 0x5b, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x57, 0x65, 0x61, 0x72, 0x61, 0x62,
	0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x49, 0x64, 0x12, 0x21, 0x2e, 0x61, 0x6e, 0x61,
	0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x65, 0x61, 0x72, 0x61, 0x62,
	0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e,
	0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x65, 0x61,
	0x72, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x12, 0x48, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x65, 0x61, 0x72, 0x61, 0x62,
	0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x20, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69,
	0x63, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x65, 0x61, 0x72, 0x61, 0x62, 0x6c,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79,
	0x74, 0x69, 0x63, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x48, 0x0a, 0x12, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x57, 0x65, 0x61, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x20, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x57, 0x65, 0x61, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x71, 0x1a, 0x10, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x79, 0x0a, 0x1d, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2b, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63,
	0x73, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x2b, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x12,
	0x76, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x49, 0x64, 0x12,
	0x2a, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x48,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x61, 0x6e,
	0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x12, 0x73, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x4d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x29, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69,
	0x63, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x48, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x1a, 0x29, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x4d,
	0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x12, 0x61, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x23, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x61, 0x6e, 0x61,
	0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x48,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x12,
	0x64, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x48, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x24, 0x2e, 0x61, 0x6e, 0x61, 0x6c,
	0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x48,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a,
	0x24, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x57,
	0x65, 0x65, 0x6b, 0x6c, 0x79, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x42, 0x0c, 0x5a, 0x0a, 0x2f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74,
	0x69, 0x63, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_analytics_proto_rawDescOnce sync.Once
	file_analytics_proto_rawDescData = file_analytics_proto_rawDesc
)

func file_analytics_proto_rawDescGZIP() []byte {
	file_analytics_proto_rawDescOnce.Do(func() {
		file_analytics_proto_rawDescData = protoimpl.X.CompressGZIP(file_analytics_proto_rawDescData)
	})
	return file_analytics_proto_rawDescData
}

var file_analytics_proto_msgTypes = make([]protoimpl.MessageInfo, 38)
var file_analytics_proto_goTypes = []any{
	(*AddMedicalRecordReq)(nil),              // 0: analytics.AddMedicalRecordReq
	(*AddMedicalRecordRes)(nil),              // 1: analytics.AddMedicalRecordRes
	(*GetMedicalRecordsByIdReq)(nil),         // 2: analytics.GetMedicalRecordsByIdReq
	(*GetMedicalRecordsByIdRes)(nil),         // 3: analytics.GetMedicalRecordsByIdRes
	(*GetMedicalRecordsReq)(nil),             // 4: analytics.GetMedicalRecordsReq
	(*GetMedicalRecordsRes)(nil),             // 5: analytics.GetMedicalRecordsRes
	(*UpdateMedicalRecordReq)(nil),           // 6: analytics.UpdateMedicalRecordReq
	(*DeleteMedicalRecordReq)(nil),           // 7: analytics.DeleteMedicalRecordReq
	(*ListMedicalRecordsReq)(nil),            // 8: analytics.ListMedicalRecordsReq
	(*ListMedicalRecordsRes)(nil),            // 9: analytics.ListMedicalRecordsRes
	(*AddLifestyleDataReq)(nil),              // 10: analytics.AddLifestyleDataReq
	(*AddLifestyleDataRes)(nil),              // 11: analytics.AddLifestyleDataRes
	(*GetLifestyleDataReq)(nil),              // 12: analytics.GetLifestyleDataReq
	(*GetLifestyleDataRes)(nil),              // 13: analytics.GetLifestyleDataRes
	(*GetLifestyleDataByIdReq)(nil),          // 14: analytics.GetLifestyleDataByIdReq
	(*GetLifestyleDataByIdRes)(nil),          // 15: analytics.GetLifestyleDataByIdRes
	(*UpdateLifestyleDataReq)(nil),           // 16: analytics.UpdateLifestyleDataReq
	(*DeleteLifestyleDataReq)(nil),           // 17: analytics.DeleteLifestyleDataReq
	(*AddWearableDataReq)(nil),               // 18: analytics.AddWearableDataReq
	(*AddWearableDataRes)(nil),               // 19: analytics.AddWearableDataRes
	(*GetWearableDataReq)(nil),               // 20: analytics.GetWearableDataReq
	(*GetWearableDataRes)(nil),               // 21: analytics.GetWearableDataRes
	(*GetWearableDataByIdReq)(nil),           // 22: analytics.GetWearableDataByIdReq
	(*GetWearableDataByIdRes)(nil),           // 23: analytics.GetWearableDataByIdRes
	(*UpdateWearableDataReq)(nil),            // 24: analytics.UpdateWearableDataReq
	(*DeleteWearableDataReq)(nil),            // 25: analytics.DeleteWearableDataReq
	(*GenerateHealthRecommendationsReq)(nil), // 26: analytics.GenerateHealthRecommendationsReq
	(*GenerateHealthRecommendationsRes)(nil), // 27: analytics.GenerateHealthRecommendationsRes
	(*GetHealthRecommendationsByIdReq)(nil),  // 28: analytics.GetHealthRecommendationsByIdReq
	(*GetHealthRecommendationsByIdRes)(nil),  // 29: analytics.GetHealthRecommendationsByIdRes
	(*GetRealtimeHealthMonitoringReq)(nil),   // 30: analytics.GetRealtimeHealthMonitoringReq
	(*GetRealtimeHealthMonitoringRes)(nil),   // 31: analytics.GetRealtimeHealthMonitoringRes
	(*GetDailyHealthSummaryReq)(nil),         // 32: analytics.GetDailyHealthSummaryReq
	(*GetDailyHealthSummaryRes)(nil),         // 33: analytics.GetDailyHealthSummaryRes
	(*GetWeeklyHealthSummaryReq)(nil),        // 34: analytics.GetWeeklyHealthSummaryReq
	(*GetWeeklyHealthSummaryRes)(nil),        // 35: analytics.GetWeeklyHealthSummaryRes
	(*Empty)(nil),                            // 36: analytics.Empty
	nil,                                      // 37: analytics.GetRealtimeHealthMonitoringRes.MonitoringDataEntry
}
var file_analytics_proto_depIdxs = []int32{
	1,  // 0: analytics.GetMedicalRecordsByIdRes.info:type_name -> analytics.AddMedicalRecordRes
	1,  // 1: analytics.GetMedicalRecordsRes.records:type_name -> analytics.AddMedicalRecordRes
	1,  // 2: analytics.ListMedicalRecordsRes.records:type_name -> analytics.AddMedicalRecordRes
	11, // 3: analytics.GetLifestyleDataRes.data:type_name -> analytics.AddLifestyleDataRes
	11, // 4: analytics.GetLifestyleDataByIdRes.info:type_name -> analytics.AddLifestyleDataRes
	19, // 5: analytics.GetWearableDataRes.data:type_name -> analytics.AddWearableDataRes
	19, // 6: analytics.GetWearableDataByIdRes.info:type_name -> analytics.AddWearableDataRes
	27, // 7: analytics.GetHealthRecommendationsByIdRes.info:type_name -> analytics.GenerateHealthRecommendationsRes
	37, // 8: analytics.GetRealtimeHealthMonitoringRes.monitoring_data:type_name -> analytics.GetRealtimeHealthMonitoringRes.MonitoringDataEntry
	0,  // 9: analytics.AnalyticsService.AddMedicalRecord:input_type -> analytics.AddMedicalRecordReq
	4,  // 10: analytics.AnalyticsService.GetMedicalRecord:input_type -> analytics.GetMedicalRecordsReq
	2,  // 11: analytics.AnalyticsService.GetMedicalRecordsById:input_type -> analytics.GetMedicalRecordsByIdReq
	6,  // 12: analytics.AnalyticsService.UpdateMedicalRecord:input_type -> analytics.UpdateMedicalRecordReq
	7,  // 13: analytics.AnalyticsService.DeleteMedicalRecord:input_type -> analytics.DeleteMedicalRecordReq
	8,  // 14: analytics.AnalyticsService.ListMedicalRecords:input_type -> analytics.ListMedicalRecordsReq
	10, // 15: analytics.AnalyticsService.AddLifestyleData:input_type -> analytics.AddLifestyleDataReq
	12, // 16: analytics.AnalyticsService.GetLifestyleData:input_type -> analytics.GetLifestyleDataReq
	14, // 17: analytics.AnalyticsService.GetLifestyleDataById:input_type -> analytics.GetLifestyleDataByIdReq
	16, // 18: analytics.AnalyticsService.UpdateLifestyleData:input_type -> analytics.UpdateLifestyleDataReq
	17, // 19: analytics.AnalyticsService.DeleteLifestyleData:input_type -> analytics.DeleteLifestyleDataReq
	18, // 20: analytics.AnalyticsService.AddWearableData:input_type -> analytics.AddWearableDataReq
	20, // 21: analytics.AnalyticsService.GetWearableData:input_type -> analytics.GetWearableDataReq
	22, // 22: analytics.AnalyticsService.GetWearableDataById:input_type -> analytics.GetWearableDataByIdReq
	24, // 23: analytics.AnalyticsService.UpdateWearableData:input_type -> analytics.UpdateWearableDataReq
	25, // 24: analytics.AnalyticsService.DeleteWearableData:input_type -> analytics.DeleteWearableDataReq
	26, // 25: analytics.AnalyticsService.GenerateHealthRecommendations:input_type -> analytics.GenerateHealthRecommendationsReq
	28, // 26: analytics.AnalyticsService.GetHealthRecommendationsById:input_type -> analytics.GetHealthRecommendationsByIdReq
	30, // 27: analytics.AnalyticsService.GetRealtimeHealthMonitoring:input_type -> analytics.GetRealtimeHealthMonitoringReq
	32, // 28: analytics.AnalyticsService.GetDailyHealthSummary:input_type -> analytics.GetDailyHealthSummaryReq
	34, // 29: analytics.AnalyticsService.GetWeeklyHealthSummary:input_type -> analytics.GetWeeklyHealthSummaryReq
	1,  // 30: analytics.AnalyticsService.AddMedicalRecord:output_type -> analytics.AddMedicalRecordRes
	5,  // 31: analytics.AnalyticsService.GetMedicalRecord:output_type -> analytics.GetMedicalRecordsRes
	3,  // 32: analytics.AnalyticsService.GetMedicalRecordsById:output_type -> analytics.GetMedicalRecordsByIdRes
	36, // 33: analytics.AnalyticsService.UpdateMedicalRecord:output_type -> analytics.Empty
	36, // 34: analytics.AnalyticsService.DeleteMedicalRecord:output_type -> analytics.Empty
	9,  // 35: analytics.AnalyticsService.ListMedicalRecords:output_type -> analytics.ListMedicalRecordsRes
	11, // 36: analytics.AnalyticsService.AddLifestyleData:output_type -> analytics.AddLifestyleDataRes
	13, // 37: analytics.AnalyticsService.GetLifestyleData:output_type -> analytics.GetLifestyleDataRes
	15, // 38: analytics.AnalyticsService.GetLifestyleDataById:output_type -> analytics.GetLifestyleDataByIdRes
	36, // 39: analytics.AnalyticsService.UpdateLifestyleData:output_type -> analytics.Empty
	36, // 40: analytics.AnalyticsService.DeleteLifestyleData:output_type -> analytics.Empty
	19, // 41: analytics.AnalyticsService.AddWearableData:output_type -> analytics.AddWearableDataRes
	21, // 42: analytics.AnalyticsService.GetWearableData:output_type -> analytics.GetWearableDataRes
	23, // 43: analytics.AnalyticsService.GetWearableDataById:output_type -> analytics.GetWearableDataByIdRes
	36, // 44: analytics.AnalyticsService.UpdateWearableData:output_type -> analytics.Empty
	36, // 45: analytics.AnalyticsService.DeleteWearableData:output_type -> analytics.Empty
	27, // 46: analytics.AnalyticsService.GenerateHealthRecommendations:output_type -> analytics.GenerateHealthRecommendationsRes
	29, // 47: analytics.AnalyticsService.GetHealthRecommendationsById:output_type -> analytics.GetHealthRecommendationsByIdRes
	31, // 48: analytics.AnalyticsService.GetRealtimeHealthMonitoring:output_type -> analytics.GetRealtimeHealthMonitoringRes
	33, // 49: analytics.AnalyticsService.GetDailyHealthSummary:output_type -> analytics.GetDailyHealthSummaryRes
	35, // 50: analytics.AnalyticsService.GetWeeklyHealthSummary:output_type -> analytics.GetWeeklyHealthSummaryRes
	30, // [30:51] is the sub-list for method output_type
	9,  // [9:30] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_analytics_proto_init() }
func file_analytics_proto_init() {
	if File_analytics_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_analytics_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*AddMedicalRecordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*AddMedicalRecordRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GetMedicalRecordsByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetMedicalRecordsByIdRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetMedicalRecordsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetMedicalRecordsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateMedicalRecordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteMedicalRecordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*ListMedicalRecordsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*ListMedicalRecordsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*AddLifestyleDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*AddLifestyleDataRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*GetLifestyleDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*GetLifestyleDataRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*GetLifestyleDataByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*GetLifestyleDataByIdRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateLifestyleDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteLifestyleDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*AddWearableDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*AddWearableDataRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*GetWearableDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*GetWearableDataRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*GetWearableDataByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*GetWearableDataByIdRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateWearableDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteWearableDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*GenerateHealthRecommendationsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*GenerateHealthRecommendationsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*GetHealthRecommendationsByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*GetHealthRecommendationsByIdRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*GetRealtimeHealthMonitoringReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*GetRealtimeHealthMonitoringRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*GetDailyHealthSummaryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*GetDailyHealthSummaryRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*GetWeeklyHealthSummaryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*GetWeeklyHealthSummaryRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analytics_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_analytics_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   38,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_analytics_proto_goTypes,
		DependencyIndexes: file_analytics_proto_depIdxs,
		MessageInfos:      file_analytics_proto_msgTypes,
	}.Build()
	File_analytics_proto = out.File
	file_analytics_proto_rawDesc = nil
	file_analytics_proto_goTypes = nil
	file_analytics_proto_depIdxs = nil
}
