version: '3.9'

services:
  postgres-db:
    container_name: postgres-db
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: healthauth
    volumes:
      - db:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - mynetwork
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d healthauth -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6380:6379"
    volumes:
      - redis-data:/data
    networks:
      - mynetwork

  mongo-db:
    container_name: mongo
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: mukhammed
      MONGO_INITDB_ROOT_PASSWORD: 1234
    ports:
      - "27017:27017"
    networks:
      - mynetwork
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "mongo --eval 'db.runCommand({ ping: 1 })'"]
      interval: 30s
      timeout: 10s
      retries: 5

  api-gateway:
    container_name: api-gateway
    build: ./Api
    ports:
      - "8080:8080"
    networks:
      - mynetwork

  analytics-service:
    container_name: analytics
    build: ./Analytics
    ports:
      - "8082:8082"
    networks:
      - mynetwork

  auth-service:
    container_name: auth
    build: ./Auth
    ports:
      - "8081:8081"
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge

volumes:
  db:
  redis-data:
    driver: local
